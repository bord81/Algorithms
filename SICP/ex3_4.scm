#lang racket

(define (make-account balance pwd)
  (define (make-account-int balance pwd attempts)
    (define (withdraw amount)
      (if (>= balance amount)
          (begin (set! balance (- balance amount))
                 balance)
          "Insufficient funds"))
    (define (deposit amount)
      (set! balance (+ balance amount))
      balance)
    (define (dispatch p m)
      (if (eq? p pwd)
          (cond ((eq? m 'withdraw) withdraw)
                ((eq? m 'deposit) deposit)
                (else (error "Unknown request: MAKE-ACCOUNT"
                             m)))
          (if (< attempts 7)
              (begin
                (set! attempts (+ attempts 1))
                dummy-proc)
              (call-the-cops))))
    (define (call-the-cops)
      (error "STAY WHERE YOU ARE!!!"))
  (define (dummy-proc x)
    (println "Incorrect password"))
    dispatch)
  (make-account-int balance pwd 0))

(define acc (make-account 100 'secret-password))
((acc 'secret-password 'withdraw) 40)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50) 